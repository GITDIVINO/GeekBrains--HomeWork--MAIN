"""5. Создать список, содержащий цены на товары (10–20 товаров), например: [57.8, 46.51, 97, ...]
Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде <r> руб <kk> коп
(например «5 руб 04 коп»). Подумать, как из цены получить рубли и копейки, как добавить нули, если, например,
получилось 7 копеек или 0 копеек (должно быть 07 коп или 00 коп). """

import random  # Импортируем модуль для генерации рандомного списка

price_lst = [round(random.uniform(20, 90), 2) for i in range(20)]  # генерируем список чисел с плавающей точкой


def make_view(some_lst):  # функция преобразования цен в виде <r> руб <kk> коп
    better_view_lst = []

    for price in some_lst:
        rub = int(price)
        cop = int((price - rub) * 100)

        if cop < 10:  # добавляем нули к копейкам (должно быть 07 коп или 00 коп)
            cop = '0' + str(cop)
        new_price = f'{rub} руб {cop} коп'

        better_view_lst.append(new_price)

    return ', '.join(map(str, better_view_lst))


print(f'Цены в виде <r> руб <kk> коп: \n{make_view(price_lst)}')

"""b. Вывести цены, отсортированные по возрастанию, новый список не создавать (доказать, что объект списка после сортировки
  остался тот же)."""

print(f'\nЦены в виде <r> руб <kk> коп, отсортированные по возрастанию: \n{make_view(sorted(price_lst))}')

"""c. Создать новый список, содержащий те же цены, но отсортированные по убыванию."""

rev_price_lst = sorted(price_lst)[::-1]
print(f'\nЦены в виде <r> руб <kk> коп, отсортированные по убыванию: \n{make_view(rev_price_lst)}')

"""d. Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию, написав минимум 
кода? """

print(f'\nЦены пяти самых дорогих товаров: \n{make_view(rev_price_lst[0:5])}')
